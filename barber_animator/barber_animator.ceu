#include "barber.ceu"

var _SDL_Window* win;
finalize
  win = _SDL_CreateWindow("Animator", 100, 100, 800, 600, _SDL_WINDOW_SHOWN);
with
  _SDL_DestroyWindow(win);
end
var int ren_w;
var int ren_h;
_SDL_GetWindowSize(win, &ren_w, &ren_h);

var _SDL_Renderer[] ren;
finalize
  ren = _SDL_CreateRenderer(win, -1, 0);
with
  _SDL_DestroyRenderer(ren);
end

par/or do
  await SDL_QUIT;
with
  await 480s;
with
  var BarberQueue barber_queue;
  var ChairQueue chair_queue;
  var SmallSquare red with
    this.r = 255;
    this.g = 0;
    this.b = 0;
    this.speed = 0.1;
  end;
  var SmallSquare green with
    this.r = 0;
    this.g = 255;
    this.b = 0;
    this.speed = 0.1;
  end;
  var SmallSquare blue with
    this.r = 0;
    this.g = 0;
    this.b = 255;
    this.speed = 1;
  end;
  pool Barber[] barbers;
  var int barbercount = _random_plusminus(5, 4);
  loop i in barbercount do
    spawn Barber in barbers with
      this.queue = barber_queue;
      this.id = i;
      this.kind = red;
      this.ren = ren;
    end;
  end
  _printf("built the barbers\n");
  pool Chair[] chairs;
  var int chaircount = _random_plusminus(5, 4);
  loop i in chaircount do
    spawn Chair in chairs with
      this.queue = chair_queue;
      this.id = i;
      this.kind = green;
      this.ren = ren;
    end;
  end
  _printf("built the chairs\n");
  await 1s;
  _printf("spawning the customers\n");
  loop do
    await (_random_plusminus(2000, 1000))ms; // new arrivals every 18 +- 6 minutes
    spawn Customer with
      this.barbers = barber_queue;
      this.chairs = chair_queue;
      this.kind = blue;
      this.ren = ren;
    end;
  end
end

escape 0;

